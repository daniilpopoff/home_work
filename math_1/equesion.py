import random
import numpy as np

# Определите матрицу A
A = np.array([[2, -1, 0], [3, 4, -2], [-3, 1, 5]])

# Определите матрицу B (правая часть уравнения)
B = np.array([[3, 1, 2], [-2, 1, 3], [0, 2, -4]])
antwort = 4*A - 5 * B  
print (antwort)

# Проверьте, является ли матрица A обратимой (детерминант не равен нулю)
# det_A = np.linalg.det(A)

# if det_A != 0:
#     # Вычислите обратную матрицу A^(-1)
#     A_inv = np.linalg.inv(A)

#     # Решите уравнение X = A^(-1) * B
#     X = np.dot(A_inv, B)

#     print("Решение матричного уравнения AX = B:")
#     print("Матрица X:")
#     print(X)
# else:
#     print("Матрица A вырождена, решение невозможно.")
# # В этом коде мы сначала проверяем, что матрица A обратима (ее детерминант не равен нулю), и только затем вычисляем обратную матрицу A^(-1) и решаем уравнение X = A^(-1) * B. Если матрица A вырождена и не имеет обратной матрицы, код сообщит об этом.

# # системы уравнений 
# # решение системы это когда мы ставим числа получаем тождество 
# # совместной называется такая система с хотябы 1 решением 
# # иначе она не совместна 

# #орпеделенной называется та система лин алгебаич ести у нее есть одно единственное решение 
# # неопрределенной имеет несколько решений 
# # однородная и неоднорадная 
# # однородная все правые части равны 0
# систему можно AX = B
# матрица системы матрица неизвестных правая матрица 
# расширеная марица 
# r(A)=r(A|B) если так то они совместны если меньше то
# 

# random(A)<r(A|B)система несовместима 
# r(A)=r(A|B)=n где н кол во неизвстных 
# r(A)=r(A|B)<n система имеет бесконечно много решений 
# 2 1|1
# 4 2|0

# 2 1|1
# 0 0|-2 r(A)= 1 
# r(a|B) = 2 
# написать код с помощью которого можно определить матрицу 
# можоли ее решать или нельзя по метододу кранекина и еще одного ученого 
# # 
# метод Гаусса как 
# 
# 
# 
